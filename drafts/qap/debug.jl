include("hungarian.jl")
include("branch_and_bound.jl")
# include("branch_and_bound_parallel.jl")

# g = [297 368 244 156; 174 254 131 82; 293 353 245 161; 152 217 116 73]

# hungarian_least_cost(4,g)

# beth.dat
d_mat = [0 6 7 2;6 0 5 6;7 5 0 1;2 6 1 0]
f_mat = [0 28 25 13;28 0 15 4;25 15 0 23;13 4 23 0]
n = 4

# esc8a
d_mat =[0 1 0 0 0 1 0 0;1 0 0 0 0 1 0 0;0 0 0 0 0 0 0 0;0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;1 1 0 0 0 0 0 0;0 0 0 0 0 0 0 0;0 0 0 0 0 0 0 0]
f_mat = [0 0 0 1 0 1 1 2;0 0 1 0 1 0 2 1;0 1 0 0 1 2 0 1;1 0 0 0 2 1 1 0;0 1 1 2 0 0 0 1;1 0 2 1 0 0 1 0;1 2 0 1 0 1 0 0;2 1 1 0 1 0 0 0]

# esc8b
# d_mat = [0 1 1 0 1 1 0 0;1 0 2 1 0 0 0 0;1 2 0 2 0 0 0 0;0 1 2 0 0 0 0 0;1 0 0 0 0 2 1 0;1 0 0 0 2 0 2 0;0 0 0 0 1 2 0 0;0 0 0 0 0 0 0 0]
# f_mat = [0 0 0 1 0 1 1 2;0 0 1 0 1 0 2 1;0 1 0 0 1 2 0 1;1 0 0 0 2 1 1 0;0 1 1 2 0 0 0 1;1 0 2 1 0 0 1 0;1 2 0 1 0 1 0 0;2 1 1 0 1 0 0 0]
n = 8

# had12
# d_mat = [0  1  2  2  3  4  4  5  3  5  6  7;1  0  1  1  2  3  3  4  2  4  5  6;2  1  0  2  1  2  2  3  1  3  4  5;2  1  2  0  1  2  2  3  3  3  4  5;3  2  1  1  0  1  1  2  2  2  3  4;4  3  2  2  1  0  2  3  3  1  2  3;4  3  2  2  1  2  0  1  3  1  2  3;5  4  3  3  2  3  1  0  4  2  1  2;3  2  1  3  2  3  3  4  0  4  5  6;5  4  3  3  2  1  1  2  4  0  1  2;6  5  4  4  3  2  2  1  5  1  0  1;7  6  5  5  4  3  3  2  6  2  1  0]
# f_mat = [0  3  4  6  8  5  6  6  5  1  4  6;3  0  6  3  7  9  9  2  2  7  4  7;4  6  0  2  6  4  4  4  2  6  3  6;6  3  2  0  5  5  3  3  9  4  3  6;8  7  6  5  0  4  3  4  5  7  6  7;5  9  4  5  4  0  8  5  5  5  7  5;6  9  4  3  3  8  0  6  8  4  6  7;6  2  4  3  4  5  6  0  1  5  5  3;5  2  2  9  5  5  8  1  0  4  5  2;1  7  6  4  7  5  4  5  4  0  7  7;4  4  3  3  6  7  6  5  5  7  0  9;6  7  6  6  7  5  7  3  2  7  9  0]
# n = 12

qap_branch = QAPBranch(n, d_mat, f_mat)
solve(qap_branch)

